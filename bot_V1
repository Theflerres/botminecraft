// Importa a biblioteca mineflayer
const mineflayer = require('mineflayer');
// Importa a função para o handshake do Forge
const forgeHandshake = require('minecraft-protocol-forge').forgeHandshake;
// Importa o plugin pathfinder e seus componentes
const { pathfinder, Movements } = require('mineflayer-pathfinder');
const { GoalBlock } = require('mineflayer-pathfinder').goals;




// Configurações do bot
const bot = mineflayer.createBot({
  host: 'localhost',    // Conectando ao servidor local
  port: 25565,   // Porta padrão do Minecraft
  username: 'BotNPC', // Nome do bot
  auth: 'offline',              
  version: '1.20.1'             
});



// Integração com Forge 
try {

  const versaoCorretaDoForge = '47.4.0'; 

  const forgeMods = [
    { modid: 'minecraft', version: '1.20.1' }, 
    { modid: 'forge', version: versaoCorretaDoForge }, 
    { modid: 'ae2things', version: '1.2.1' },
    { modid: 'ae2wtlib', version: '15.2.3' },
    { modid: 'amendments', version: '1.2.14' },
    { modid: 'ancientcurses', version: '1.1.5' },
    { modid: 'apothicattributes', version: '1.3.7' },
    { modid: 'appleskin', version: '2.5.1' },
    { modid: 'appliedenergistics2', version: '15.2.16' },
    { modid: 'architectury', version: '9.2.14' },
    { modid: 'artifacts', version: '9.5.13' },
    { modid: 'athena', version: '3.1.2' },
    { modid: 'attributefix', version: '21.0.4' },
    { modid: 'badoptimizations', version: '2.2.1' },
    { modid: 'balm', version: '7.3.10' },
    { modid: 'basically_signs', version: '1.1.0' },
    { modid: 'beautify', version: '2.0.2' },
    { modid: 'bettercombat', version: '1.8.6+1.20.1' },
    { modid: 'bookshelf', version: '20.2.13' },
    { modid: 'born_in_chaos', version: '1.6.2' },
    { modid: 'braziliandelight', version: '2.0.1' },
    { modid: 'buildingwands', version: '2.6.9-release' },
    { modid: 'caelus', version: '3.2.0+1.20.1' },
    { modid: 'carryon', version: '2.1.2.7' },
    { modid: 'cataclysmiccombat', version: '1.4' },
    { modid: 'charginggadgets', version: '1.11.0' },
    { modid: 'chipped', version: '3.0.7' },
    { modid: 'cloth_config', version: '11.1.136' },
    { modid: 'colorfulhearts', version: '4.3.16' },
    { modid: 'connectedglass', version: '1.1.12' },
    { modid: 'connectivity', version: '6.8' },
    { modid: 'corgilib', version: '4.0.3.3' },
    { modid: 'corpse', version: '1.0.19' },
    { modid: 'cosmeticarmorreworked', version: 'v1a' },
    { modid: 'craterlib', version: '2.1.2+hotfix.1' },
    { modid: 'create', version: '0.5.1.j' },
    { modid: 'create_stuff_additions', version: '2.0.8' },
    { modid: 'createaddition', version: '1.2.5' },
    { modid: 'createdeco', version: '2.0.2' },
    { modid: 'create_connected', version: '0.9.4' },
    { modid: 'create_jetpack', version: '4.3.2' },
    { modid: 'creativecore', version: 'v2.12.28' },
    { modid: 'croptopia', version: '3.0.4' },
    { modid: 'culllessleaves_reforged', version: '1.0.5' },
    { modid: 'cupboard', version: '2.7' },
    { modid: 'curios', version: '5.11.0+1.20.1' },
    { modid: 'davespotioneering', version: '12' },
    { modid: 'delightful', version: '3.7' },
    { modid: 'deltaboxlib', version: '2.1.0' },
    { modid: 'dimensionaccessmanager', version: '3.1.0' },
    { modid: 'dummmmmmy', version: '2.0.2' },
    { modid: 'elevatorid', version: '1.9' },
    { modid: 'enchantmentdescriptions', version: '17.1.19' },
    { modid: 'entityculling', version: '1.7.3' },
    { modid: 'epherolib', version: '1.2.0' },
    { modid: 'etched', version: '3.0.4' },
    { modid: 'evenmoreinstruments', version: '6.1.3' },
    { modid: 'everycomp', version: '2.7.10' },
    { modid: 'fairylights', version: '7.0.0' },
    { modid: 'farmersdelight', version: '1.2.7' },
    { modid: 'farmingforblockheads', version: '14.0.2' },
    { modid: 'fastboot', version: '1.2' },
    { modid: 'ferritecore', version: '6.0.1' },
    { modid: 'framedblocks', version: '9.3.1' },
    { modid: 'framework', version: '0.7.12' },
    { modid: 'fromtheshadowsreborn', version: '2.8' },
    { modid: 'ftbchunks', version: '2001.3.5' },
    { modid: 'ftbessentials', version: '2001.2.2' },
    { modid: 'ftblibrary', version: '2001.2.9' },
    { modid: 'ftbquests', version: '2001.4.11' },
    { modid: 'ftbteams', version: '2001.3.1' },
    { modid: 'fusion', version: '1.1.1' },
    { modid: 'geckolib', version: '4.7' },
    { modid: 'genshinstrument', version: '4.0.2' },
    { modid: 'gpumemleakfix', version: '1.8' },
    { modid: 'handcrafted', version: '3.0.6' },
    { modid: 'hiddennames', version: '1.0.5' },
    { modid: 'ias', version: '9.0.0' },
    { modid: 'ibeeditor', version: '2.2.8' },
    { modid: 'idas', version: '1.10.3+1.20.1' },
    { modid: 'immersive_paintings', version: '0.6.7+1.20.1' },
    { modid: 'insanelib', version: '1.16.0' },
    { modid: 'integrated_api', version: '1.5.1+1.20.1' },
    { modid: 'integrated_stronghold', version: '1.1.1+1.20.1' },
    { modid: 'ironsspellsdelight', version: '1.1.1.1' },
    { modid: 'irons_spellbooks', version: '3.4.0.7' },
    { modid: 'itemobliterate', version: '2.3.1' },
    { modid: 'jade', version: '11.12.3' },
    { modid: 'jei', version: '15.20.0.106' },
    { modid: 'justenoughmekanismmultiblocks', version: '4.8' },
    { modid: 'justenoughprofessions', version: '3.0.1' },
    { modid: 'justenoughresources', version: '1.4.0.247' },
    { modid: 'konkrete', version: '1.8.0' },
    { modid: 'kotlinforforge', version: '4.11.0' },
    { modid: 'kubejs', version: '2001.6.5-build.16' },
    { modid: 'letsdo_api', version: '1.2.15' },
    { modid: 'letsdo_candlelight', version: '2.0.2' },
    { modid: 'letsdo_farm_and_charm', version: '1.0.4' },
    { modid: 'lionfishapi', version: '2.4-Fix' },
    { modid: 'lodestone', version: '1.6.4.1' },
    { modid: 'lootr', version: '0.7.35.90' },
    { modid: 'l_enders_cataclysm', version: '2.32' },
    { modid: 'malum', version: '1.6.5.1' },
    { modid: 'mekanism', version: '10.4.13.69' },
    { modid: 'mekanismgenerators', version: '10.4.13.69' },
    { modid: 'mekanismweapons', version: '1.5' },
    { modid: 'melody', version: '1.0.3' },
    { modid: 'mininggadgets', version: '1.15.6' },
    { modid: 'moadecor_art', version: '1.20.1' },
    { modid: 'moadecor_bath', version: '1.20.1' },
    { modid: 'moadecor_cookery', version: '1.20.2' },
    { modid: 'moadecor_electronics', version: '1.20.1.A' },
    { modid: 'moadecor_garden', version: '1.20.1' },
    { modid: 'moadecor_holidays', version: '1.20.1' },
    { modid: 'moadecor_lights', version: '1.20.1' },
    { modid: 'moadecor_science', version: '1.20.1' },
    { modid: 'moadecor_toys', version: '1.20.1' },
    { modid: 'modernfix', version: '5.20.2+mc1.20.1' },
    { modid: 'moonlight', version: '2.13.45' },
    { modid: 'moremekanismprocessing', version: '4.2' },
    { modid: 'necronomicon', version: '1.6.0+1.20.1' },
    { modid: 'oh_the_biomes_weve_gone', version: '1.5.5' },
    { modid: 'oh_the_trees_youll_grow', version: '1.3.4' },
    { modid: 'osp', version: 'v4.0.0' },
    { modid: 'packetfixer', version: '2.0.0' },
    { modid: 'patchouli', version: '84' },
    { modid: 'pehkui', version: '3.8.2+1.20.1' },
    { modid: 'perfectplushies', version: '1.12.0' },
    { modid: 'placebo', version: '8.6.2' },
    { modid: 'playeranimationlib', version: '1.0.2-rc1+1.20' },
    { modid: 'playerrevive', version: 'v2.0.31' },
    { modid: 'polyeng', version: '0.1.1' },
    { modid: 'polymorph', version: '0.49.8+1.20.1' },
    { modid: 'powah', version: '5.0.8' },
    { modid: 'progressivebosses', version: '3.9.7' },
    { modid: 'projectile_damage', version: '3.2.2+1.20.1' },
    { modid: 'quark', version: '4.0-460' },
    { modid: 'rechiseled', version: '1.1.6' },
    { modid: 'rechiseledcreate', version: '1.0.2' },
    { modid: 'refurbished_furniture', version: '1.0.8' },
    { modid: 'resourcefullib', version: '2.1.29' },
    { modid: 'rhino', version: '2001.2.3-build.6' },
    { modid: 'searchables', version: '1.0.3' },
    { modid: 'simplyswords', version: '1.56.0' },
    { modid: 'sophisticatedbackpacks', version: '3.23.6.1211' },
    { modid: 'sophisticatedcore', version: '1.2.23.902' },
    { modid: 'sophisticatedstorage', version: '1.3.9.1075' },
    { modid: 'soulslikeweaponry', version: '1.1.5' },
    { modid: 'spark', version: '1.10.53' },
    { modid: 'starlight', version: '1.1.2+forge.1cda73c' },
    { modid: 'steam_rails', version: '1.6.7+forge-mc1.20.1' },
    { modid: 'supermartijn642configlib', version: '1.1.8' },
    { modid: 'supermartijn642corelib', version: '1.1.18' },
    { modid: 'supplementaries', version: '3.1.11' },
    { modid: 'suppsquared', version: '1.1.18' },
    { modid: 'terrablender', version: '3.0.1.7' },
    { modid: 'toolstats', version: '16.0.9' },
    { modid: 'torchmaster', version: '20.1.9' },
    { modid: 'trade_cycling', version: '1.0.7' },
    { modid: 'trashcans', version: '1.0.18b' },
    { modid: 'twigs', version: '3.1.0' },
    { modid: 'unilib', version: '1.0.4+1.20.1' },
    { modid: 'valhelsia_core', version: '1.1.2' },
    { modid: 'voicechat', version: '2.5.26' },
    { modid: 'waystones', version: '14.1.6' },
    { modid: 'weaponmaster_ydm', version: '4.2.3' },
    { modid: 'xercapaint', version: '1.0.1' },
    { modid: 'zeta', version: '1.0-24' },
    { modid: 'securitycraft', version: 'v1.9.12'}
  ];
  
  const forgeOptions = {
    modList: forgeMods,
  };

  forgeHandshake(bot._client, forgeOptions); 
  console.log("Tentando configurar o handshake do Forge...");
  if (forgeOptions.modList && forgeOptions.modList.length > 0) {
    console.log(`Usando forgeOptions com ${forgeOptions.modList.length} mods listados.`);
  } else {
    console.log("Usando forgeOptions vazias ou sem modList (comportamento padrão).");
  }

} catch (handshakeError) {
  console.error("Erro CRÍTICO ao configurar o handshake do Forge:", handshakeError);
}

// --- Carregar Plugin Pathfinder ---
bot.loadPlugin(pathfinder);
console.log("Plugin Pathfinder carregado.");

// Evento disparado quando o bot entra no servidor com sucesso
bot.once('spawn', () => {
  console.log(`Bot ${bot.username} spawnou no servidor com sucesso! (Conectado ao localhost)`);
  bot.chat("Olá, sou um bot automatizado e conectado ao servidor Forge LOCAL! 👾 Estou pronto para receber comandos.");

  
});

// Evento para lidar com erros
bot.on('error', err => {
  console.error("Ocorreu um erro com o bot:", err);
  if (err && err.stack) {
    console.error(err.stack); // Imprime o stack trace completo do erro
  }
});

// Evento disparado quando o bot é desconectado
bot.on('end', (reason) => {
  console.log("Bot foi desconectado do servidor.");
  if (reason) {
    console.log("Motivo:", reason);
    if (typeof reason === 'object') {
        console.log("Detalhes do motivo:", JSON.stringify(reason, null, 2));
    }
  }
});

// Lógica de Chat
bot.on('chat', (username, message) => {
  if (username === bot.username) return; 

  const lowerMessage = message.toLowerCase(); 

  if (lowerMessage.includes('quem é você') || lowerMessage.includes('quem e voce') || lowerMessage.includes('quem vc e') || lowerMessage.includes('quem é vc')) {
    bot.chat(`Olá ${username}! Eu sou o ${bot.username}, um assistente virtual.`);
    return; 
  }

  if (lowerMessage.includes('olá bot') || lowerMessage.includes('oi bot') || lowerMessage.includes('eae bot')) {
    bot.chat(`Olá ${username}! Como posso ajudar?`);
    return;
  }

  if (lowerMessage.includes('como você está') || lowerMessage.includes('como vc esta') || lowerMessage.includes('tudo bem bot')) {
    bot.chat(`Estou funcionando perfeitamente, ${username}! Pronto para ajudar.`);
    return;
  }

  const commandPrefix = "bot venha até ";
  if (lowerMessage.startsWith(commandPrefix)) {
    const coordString = message.substring(commandPrefix.length).trim(); 
    const parts = coordString.split(' ');

    if (parts.length === 3) {
      const x = parseInt(parts[0], 10);
      const y = parseInt(parts[1], 10);
      const z = parseInt(parts[2], 10);

      if (!isNaN(x) && !isNaN(y) && !isNaN(z)) {
        bot.chat(`Ok, ${username}! Recebi o comando para ir até: X=${x}, Y=${y}, Z=${z}. Calculando rota...`);
        
        const targetGoal = new GoalBlock(x, y, z);
        
        bot.pathfinder.goto(targetGoal)
          .then(() => {
            bot.chat(`Cheguei nas coordenadas X=${x}, Y=${y}, Z=${z}, ${username}!`);
            console.log(`Chegou em ${x}, ${y}, ${z}.`);
          })
          .catch((err) => {
            console.error("Erro ao tentar navegar:", err);
            bot.chat(`Não consegui chegar em X=${x}, Y=${y}, Z=${z}, ${username}. Pode ser que não haja caminho ou ocorreu um erro.`);
          });

      } else {
        bot.chat(`Coordenadas inválidas, ${username}. Use o formato: X Y Z (números). Ex: bot venha até 100 65 -200`);
      }
    } else {
      bot.chat(`Formato de comando incorreto, ${username}. Use: ${commandPrefix}X Y Z`);
    }
    return; 
  }
});

// Eventos do Pathfinder
bot.on('path_update', (results) => {
  // console.log(`Pathfinder atualizou: status ${results.status}, ${results.path.length} ações.`);
});

bot.on('goal_reached', (goal) => {
  // console.log('Objetivo alcançado (evento goal_reached):', goal);
});

bot.on('path_reset', (reason) => {
  console.warn(`Caminho do Pathfinder resetado: ${reason}`);
});

console.log(`Iniciando o bot (versão com pathfinder e chat inteligente) para o servidor local...`);
console.log("Aguardando eventos de conexão e spawn...");
